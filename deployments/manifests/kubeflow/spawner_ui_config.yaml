# Configuration file for the Jupyter UI.
#
# Each Jupyter UI option is configured by two keys: 'value' and 'readOnly'
# - The 'value' key contains the default value
# - The 'readOnly' key determines if the option will be available to users
#
# If the 'readOnly' key is present and set to 'true', the respective option
# will be disabled for users and only set by the admin. Also when a
# Notebook is POSTED to the API if a necessary field is not present then
# the value from the config will be used.
#
# If the 'readOnly' key is missing (defaults to 'false'), the respective option
# will be available for users to edit.
#
# Note that some values can be templated. Such values are the names of the
# Volumes as well as their StorageClass
spawnerFormDefaults:
  image:
    # The container Image for the user's Jupyter Notebook
    value: public.ecr.aws/kubeflow-on-aws/notebook-servers/jupyter-tensorflow:2.12.0-cpu-py310-ubuntu20.04-ec2-v1.0
    # The list of available standard container Images
    options:
      - kubeflownotebookswg/jupyter-scipy:v1.7.0
  imageGroupOne:
    # The container Image for the user's Group One Server
    # The annotation `notebooks.kubeflow.org/http-rewrite-uri: /`
    # is applied to notebook in this group, configuring
    # the Istio rewrite for containers that host their web UI at `/`
    value: kubeflownotebookswg/codeserver-python:v1.7.0
    # The list of available standard container Images
    options:
      - kubeflownotebookswg/codeserver-python:v1.8.0
  imageGroupTwo:
    # The container Image for the user's Group Two Server
    # The annotation `notebooks.kubeflow.org/http-rewrite-uri: /`
    # is applied to notebook in this group, configuring
    # the Istio rewrite for containers that host their web UI at `/`
    # The annotation `notebooks.kubeflow.org/http-headers-request-set`
    # is applied to notebook in this group, configuring Istio
    # to add the `X-RStudio-Root-Path` header to requests
    value: kubeflownotebookswg/rstudio-tidyverse:v1.7.0
    # The list of available standard container Images
    options:
      - kubeflownotebookswg/rstudio-tidyverse:v1.7.0
  # If true, hide registry and/or tag name in the image selection dropdown
  hideRegistry: true
  hideTag: false
  allowCustomImage: true
  # If true, users can input custom images
  # If false, users can only select from the images in this config
  imagePullPolicy:
    # Supported values: Always, IfNotPresent, Never
    value: Always
    readOnly: false
  cpu:
    # CPU for user's Notebook
    value: "1"
    # Factor by with to multiply request to calculate limit
    # if no limit is set, to disable set "none"
    limitFactor: "1.2"
    readOnly: false
  memory:
    # Memory for user's Notebook
    value: 1.0Gi
    # Factor by with to multiply request to calculate limit
    # if no limit is set, to disable set "none"
    limitFactor: "1.2"
    readOnly: false
  environment:
    value: {}
    readOnly: false
  workspaceVolume:
    # Workspace Volume to be attached to user's Notebook
    # If you don't want a workspace volume then delete the 'value' key
    value:
      # mount: /home/jovyan
      # newPvc:
      #   metadata:
      #     name: "{notebook-name}-workspace"
      #   spec:
      #     resources:
      #       requests:
      #         storage: 10Gi
      #     accessModes:
      #       - ReadWriteOnce
    readOnly: false
  dataVolumes:
    # List of additional Data Volumes to be attached to the user's Notebook
    value: []
    # For example, a list with 2 Data Volumes:
    # value:
    #   - mount: /home/jovyan/datavol-1
    #     newPvc:
    #       metadata:
    #         name: '{notebook-name}-datavol-1'
    #       spec:
    #         resources:
    #           requests:
    #             storage: 5Gi
    #         accessModes:
    #           - ReadWriteOnce
    #   - mount: /home/jovyan/datavol-1
    #     existingSource:
    #       persistentVolumeClaim:
    #         claimName: test-pvc
    readOnly: false
  gpus:
    # Number of GPUs to be assigned to the Notebook Container
    value:
      # values: "none", "1", "2", "4", "8"
      num: "none"
      # Determines what the UI will show and send to the backend
      vendors:
        - limitsKey: "nvidia.com/gpu"
          uiName: "NVIDIA"
      # - limitsKey: "amd.com/gpu"
      #   uiName: "AMD"
      # Values: "" or a `limits-key` from the vendors list
      vendor: "nvidia.com/gpu"
    readOnly: false
  affinityConfig:
    # If readonly, the default value will be the only option
    # value is a list of `configKey`s that we want to be selected by default
    value: "notebook/cpu"
    # The list of available affinity configs
    # options: []
    options:
      - configKey: "notebook/cpu"
        displayName: "CPU Node"
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                  - key: "notebook/cpu"
                    operator: "In"
                    values:
                      - "yes"
                  - key: "HOST"
                    operator: "In"
                    values:
                      - "RT"
                      - "GCP"
            preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 1
                preference:
                  matchExpressions:
                    - key: "HOST"
                      operator: "In"
                      values:
                        - "RT"
      - configKey: "nvidia-gpu"
        displayName: "Ampere Compatible GPU (small)"
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: "k8s.amazonaws.com/accelerator"
                      operator: "In"
                      values:
                        - "nvidia-3090"
                        - "nvidia-l4"
                    - key: "HOST"
                      operator: "In"
                      values:
                        - "RT"
                        - "GCP"
            preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 1
                preference:
                  matchExpressions:
                    - key: "HOST"
                      operator: "In"
                      values:
                        - "RT"
      - configKey: "nvidia-3090"
        displayName: "NVIDIA 3090"
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: "k8s.amazonaws.com/accelerator"
                      operator: "In"
                      values:
                        - "nvidia-3090"
      - configKey: "nvidia-l4"
        displayName: "NVIDIA L4"
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: "k8s.amazonaws.com/accelerator"
                      operator: "In"
                      values:
                        - "nvidia-l4"
      - configKey: "nvidia-a10g"
        displayName: "NVIDIA A10"
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: "k8s.amazonaws.com/accelerator"
                      operator: "In"
                      values:
                        - "nvidia-a10g"
      # Comment out when Istio is fixed and notebooks can start on GCP
      # - configKey: "nvidia-tesla-a100"
      #   displayName: "NVIDIA A100 40GB"
      #   affinity:
      #     nodeAffinity:
      #       requiredDuringSchedulingIgnoredDuringExecution:
      #         nodeSelectorTerms:
      #           - matchExpressions:
      #               - key: "k8s.amazonaws.com/accelerator"
      #                 operator: "In"
      #                 values:
      #                   - "nvidia-tesla-a100"
      # Comment out when we decide to run notebooks on-premise.
      - configKey: "nvidia-a100-80gb"
        displayName: "NVIDIA A100 80GB"
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: "k8s.amazonaws.com/accelerator"
                      operator: "In"
                      values:
                        - "nvidia-a100-80gb"
            preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 1
                preference:
                  matchExpressions:
                    - key: "HOST"
                      operator: "In"
                      values:
                        - "RT"
      - configKey: "dgx2"
        displayName: "DGX2"
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: "kubernetes.io/hostname"
                      operator: "In"
                      values:
                        - "prod-snow-on-premises-worker-eus7dgx2"
      - configKey: "dgx1"
        displayName: "DGX1"
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: "kubernetes.io/hostname"
                      operator: "In"
                      values:
                        - "prod-snow-on-premises-worker-eus7dgx1"
      - configKey: "dgx"
        displayName: "DGX"
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: "relationrx.com/instance-type"
                      operator: "In"
                      values:
                        - "dgx"
    readOnly: false
  tolerationGroup:
    # The default `groupKey` from the options list
    # If readonly, the default value will be the only option
    value: "notebook/cpu"
    # The list of available tolerationGroup configs
    # options: []
    options:
      - groupKey: "notebook/cpu"
        displayName: "CPU Node"
        tolerations:
          - key: "notebook/cpu"
            operator: "Exists"
            effect: "NoSchedule"
      - groupKey: "nvidia.com/gpu"
        displayName: "NVIDIA GPU"
        tolerations:
          - key: "nvidia.com/gpu"
            operator: "Exists"
            effect: "NoSchedule"
    readOnly: false
  shm:
    value: true
    readOnly: true
  configurations:
    # List of labels to be selected, these are the labels from PodDefaults
    # value:
    #   - add-gcp-secret
    #   - default-editor
    value:
      - image-from-rt-aws # This pod default is created by "ecr-registry-helper" chart
      - all-datasets
      - team-volume
    readOnly: false
